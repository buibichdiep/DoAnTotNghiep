@model IEnumerable<CategoryHotel>

@{
    ViewData["Title"] = "CateHotel Index";
    var count = 0;
}

<div class="content pe-3">
    <div class="top-content mb-3">
        <div class="float-start d-flex form-group">
            @* <div class="me-2 position-relative">
                <input type="text"
                       class="form-control"
                       placeholder="Tìm theo tên hoặc mã sp..." />
                <button>
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div> *@
            @* <select class="form-control find-product">
                <option value="0">Không có</option>
                <option value="1">Nữ</option>
                <option value="2">Nam</option>
                <option value="3">Trẻ em</option>
                <option value="4">Trẻ em asd aksd kash kldlaksd</option>
            </select> *@
        </div>
        <div class="float-end mb-3">
            <button class="btn btn-outline-danger me-2 btn-remove">
                Xóa
            </button>
            <a class="btn btn-outline-secondary" asp-action="CateHotelCreate">+ Thêm danh mục khách sạn</a>
        </div>
    </div>
    <div class="main-content">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">
                        <input class="form-check-input"
                               type="checkbox"
                               id="checkboxNoLabel" />
                    </th>
                    <th>STT</th>
                    <th>
                        Tên danh mục
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Slug)
                    </th>
                    <th scope="col">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    await RenderCategory(item, 0);
                }
            </tbody>
        </table>
    </div>
</div>

@{
    async Task RenderCategory(CategoryHotel item, int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("--", level));
        <tr>
            <th scope="row">
                <input class="form-check-input"
                       type="checkbox"
                       id="checkboxNoLabel" />
            </th>
            <th>@(++count)</th>
            <td>
                @Html.Raw(prefix)
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            <td>
                <div class="btn-group">
                    <button type="button"
                            class="btn"
                            data-bs-toggle="dropdown"
                            aria-expanded="false">
                        <i class="fa-solid fa-ellipsis-vertical"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id">Sửa</a>
                        </li>
                        <li>
                            <a href="javascript:void(0)" data-id="@item.Id" class="dropdown-item delete-cate_hotel">Xóa</a>
                        </li>
                    </ul>
                </div>
            </td>
        </tr>
        if (item.CateHotelChildren?.Count > 0)
        {
            foreach (var cCategory in item.CateHotelChildren)
            {
                await RenderCategory(cCategory, level + 1);
            }
        }
    }
}

@await Html.PartialAsync("_LoadingPartial")

@section Scripts {
    <script>
        $(function () {
            const Toast = window.globalVariable;

            $(".delete-cate_hotel").click(function () {
                Swal.fire({
                    title: "Bạn chắc chứ?",
                    text: "Thao tác này sẽ không được hoàn lại!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Đồng ý",
                    cancelButtonText: "Không"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("CateHotelDelete", "Hotel")',
                            type: 'DELETE',
                            data: { id: $(this).data('id') },
                            beforeSend: function () {
                                $("#loadingModal").show();
                            },
                            success: function (res) {
                                if (!res.success) {
                                    Toast.fire({
                                        icon: `error`,
                                        text: res.message
                                    });
                                    return;
                                }

                                window.location.href = "@Url.Action("CateHotelIndex", "Hotel")";
                            },
                            complete: function () {
                                $("#loadingModal").hide();
                            },
                            error: function (error) {
                                Toast.fire({
                                    icon: `error`,
                                    text: `Có lỗi xảy ra`
                                });

                                console.log(error);
                            }
                        });
                    }
                });
            });
        });
    </script>
}